/*
 * Copyright 2021 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'maven-publish'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'net.researchgate.release'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set("javadoc")
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives androidSourcesJar
    archives javadocJar
}

project.ext.githubUserName = project.hasProperty('githubUserName') ? githubUserName : ""
project.ext.githubToken = project.hasProperty('githubToken') ? githubToken : ""
project.ext.publishRepo = project.hasProperty('publishRepo') ? publishRepo : ""

def pomConfig = {
    url "https://github.com/reportportal/${project.name}"
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            name 'EPAM Systems'
            email 'support@reportportal.io'
            organization 'ReportPortal.io'
            organizationUrl 'http://www.reportportal.io'
        }
    }
    scm {
        connection "scm:git:https://github.com/reportportal/${project.name}.git"
        developerConnection "scm:git:ssh://git@github.com:reportportal/${project.name}.git"
        url "https://github.com/reportportal/${project.name}/tree/master"
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version

                artifact bundleReleaseAar
                artifact androidSourcesJar
                artifact javadocJar

                pom {
                    name = project.name
                    description = project.description


                    withXml {
                        asNode().children().last() + pomConfig

                        def dependenciesNode = asNode().appendNode("dependencies")
                        project.configurations.implementation
                                .allDependencies
                                .findAll { it.name != "unspecified" }
                                .each {
                                    def dependencyNode = dependenciesNode.appendNode("dependency")
                                    dependencyNode.appendNode("groupId", it.group)
                                    dependencyNode.appendNode("artifactId", it.name)
                                    dependencyNode.appendNode("version", it.version)
                                    dependencyNode.appendNode("scope", "runtime")
                                }
                        project.configurations.api
                                .allDependencies
                                .findAll { it.name != "unspecified" }
                                .each {
                                    def dependencyNode = dependenciesNode.appendNode("dependency")
                                    dependencyNode.appendNode("groupId", it.group)
                                    dependencyNode.appendNode("artifactId", it.name)
                                    dependencyNode.appendNode("version", it.version)
                                    dependencyNode.appendNode("scope", "compile")
                                }
                    }
                }
            }
        }

        repositories {
            maven {
                name = "agent-android"
                url = uri(publishRepo)
                credentials {
                    username = githubUserName
                    password = githubToken
                }
            }
        }
    }
}

release {
    git {
        requireBranch = 'main'
    }
}

afterReleaseBuild.dependsOn publish
