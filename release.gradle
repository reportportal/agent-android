apply plugin: 'signing'
apply plugin: 'maven-publish'
apply plugin: 'org.jetbrains.dokka'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set("javadoc")
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives androidSourcesJar
    archives javadocJar
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version

                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
                artifact androidSourcesJar
                artifact javadocJar

                pom {
                    name = project.name
                    description = project.description

                    licenses {
                        license {
                            name = "The Apache Software License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }

                    // Include transitive dependencies
                    withXml {
                        def dependenciesNode = asNode().appendNode("dependencies")
                        project.configurations.implementation
                                .allDependencies
                                .findAll { it.name != "unspecified" }
                                .each {
                                    def dependencyNode = dependenciesNode.appendNode("dependency")
                                    dependencyNode.appendNode("groupId", it.group)
                                    dependencyNode.appendNode("artifactId", it.name)
                                    dependencyNode.appendNode("version", it.version)
                                    dependencyNode.appendNode("scope", "runtime")
                                }
                    }
                }
            }
        }
    }
}