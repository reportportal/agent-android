/*
 * Copyright 2021 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

apply plugin: 'com.github.johnrengelman.shadow'

apply from: "${rootProject.rootDir}/release.gradle"
apply from: "${project.scripts_url}/${project.scripts_branch}/signing.gradle"

android {
    namespace 'com.epam.reportportal.android.junit5'

    compileSdkVersion 33
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
}


configurations {
    internalize
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
task internalizeJar(type: ShadowJar) {
    dependencies {
        include(dependency('com.epam.reportportal:agent-java-junit5'))
    }

    archiveClassifier.set('intern')
    archiveVersion.set('')
    exclude 'agent.properties'

    def pkg = 'com.epam.reportportal.junit5'
    def shadowPrefix = 'android'
    relocate pkg, [shadowPrefix, pkg].join('.')
    configurations = [project.configurations.internalize]
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Android Espresso libraries
    api "androidx.test:runner:1.5.2"
    implementation 'androidx.test.ext:junit:1.1.5'
    implementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Report Portal libraries
    internalize 'com.epam.reportportal:agent-java-junit5:5.2.0'
    api tasks.internalizeJar.outputs.files
    api 'com.epam.reportportal:client-java:5.2.2'
    api 'com.google.code.findbugs:jsr305:3.0.2'
    api 'com.epam.reportportal:commons-model:5.0.0'

    // JUnit 5
    api "org.junit.jupiter:junit-jupiter-api:${project.junit5Version}"
    implementation "org.junit.platform:junit-platform-runner:${project.junit5RunnerVersion}"
    implementation "org.junit.jupiter:junit-jupiter-engine:${project.junit5Version}"

    // android-junit5 necessary libraries
    implementation 'de.mannodermaus.junit5:android-test-core:1.3.0'
    implementation 'de.mannodermaus.junit5:android-test-runner:1.3.0'
}

project.afterEvaluate {
    processDebugJavaRes.configure {
        filesMatching("agent.properties") { expand(project.properties) }
    }

    processReleaseJavaRes.configure {
        filesMatching("agent.properties") { expand(project.properties) }
    }
}
